{"version":3,"sources":["webpack:///./src/pages/article.js","webpack:///./src/components/matches.js","webpack:///./src/pages/page-4.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/image.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/calendar.js","webpack:///./src/components/grid.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_image__WEBPACK_IMPORTED_MODULE_2__","_components_header__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","html_react_parser__WEBPACK_IMPORTED_MODULE_6__","html_react_parser__WEBPACK_IMPORTED_MODULE_6___default","SecondPage","_ref","location","img","state","a","createElement","className","title","author","Parser","article","imgName","useEffect","navigate","Matches","props","matches","map","item","i","react_default","key","matchup","src","url","frameBorder","Fragment","Page4","_useState","useState","data","setData","_ref2","regenerator_default","mark","_callee","result","wrap","_context","prev","next","axios","sent","stop","apply","this","arguments","header","src_components_matches","d","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","children","Consumer","gatsby__WEBPACK_IMPORTED_MODULE_2__","Header","activeStyle","color","to","Image","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","image","allImageSharp","edges","find","edge","node","fluid","originalName","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","_public_static_d_397463695_json__WEBPACK_IMPORTED_MODULE_1__","m","module","exports","require","default","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","Layout","_public_static_d_856328897_json__WEBPACK_IMPORTED_MODULE_0__","_header__WEBPACK_IMPORTED_MODULE_2__","siteTitle","style","margin","maxWidth","padding","paddingTop","Date","getFullYear","href","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","Calendar","calendar","post","link","id","day","month","event","Grid","articles","slice","gatsby_browser_entry","components_image","date","substring","article2","components_calendar"],"mappings":"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","file":"component---src-pages-page-4-js-e56aa67f3e86780b4068.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport Image from \"../components/image\"\r\nimport Header from \"../components/header\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { useEffect } from 'react';\r\nimport { navigate } from 'gatsby';\r\nimport Parser from 'html-react-parser';\r\n\r\nfunction SecondPage ({ location }) {\r\n\r\nvar img = location.state.img == \"null\" ? \"butterfly.jpg\" : location.state.img;\r\n  if ( !location.state) {\r\n    useEffect(() => {\r\n   navigate('/page-3');\r\n }, []);\r\n return null;\r\n  }\r\nreturn (\r\n<div className=\"container\">\r\n    <SEO title=\"Page two\" />\r\n    <Header />\r\n    <div className=\"grid-container\">\r\n    <div  className=\"grid-item\">\r\n      <h3>{location.state.title}</h3>\r\n      <div className=\"date-sm\">{location.state.author}</div>\r\n      <p>{Parser(location.state.article)}</p>\r\n    </div>\r\n    <div  className=\"grid-item\"><Image imgName={img} /></div>\r\n    </div>\r\n</div>\r\n)\r\n}\r\n\r\nexport default SecondPage\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport Image from \"../components/image\"\r\nimport Header from \"../components/header\"\r\nimport './matches.css'\r\nimport SEO from \"../components/seo\"\r\nimport { useEffect } from 'react';\r\nimport { navigate } from 'gatsby';\r\nimport Parser from 'html-react-parser';\r\n\r\nfunction Matches (props) {\r\n\r\n  if ( props.matches) {\r\n\r\n  var matches = props.matches.map((item, i) => {\r\n\r\n    return (\r\n      <div key={i} className=\"grid-item\">\r\n      <h3> {item.matchup} </h3>\r\n        <div className=\"i-wrapper\">\r\n            <iframe  title={item.matchup} src={\"https://lichess.org/\" + item.url} frameBorder=\"0\"/>\r\n        </div>\r\n      </div>\r\n    )\r\n  });\r\n}\r\n\r\n  return (\r\n<>\r\n{matches}\r\n</>\r\n)\r\n}\r\n\r\nexport default Matches\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Link, Router } from \"gatsby\"\r\nimport \"../components/layout.css\"\r\nimport Layout from \"../components/layout\"\r\nimport Image from \"../components/image\"\r\nimport SEO from \"../components/seo\"\r\nimport Grid from \"../components/grid\"\r\nimport Header from \"../components/header\"\r\nimport axios from \"axios\"\r\nimport { navigate } from 'gatsby';\r\nimport Matches from \"../components/matches\"\r\n\r\n\r\nfunction Page4 ({ location }) {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(\r\n        'https://www.chessea.nl/data.php',\r\n      );\r\n\r\n      setData(result.data);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n    return (\r\n      <>\r\n    <Header />\r\n      <div className=\"grid-container-c container\">\r\n    <Matches matches={data.matches} />\r\n    </div>\r\n    </>\r\n)\r\n}\r\n\r\nexport default Page4\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport './header.css'\r\nimport { Link } from \"gatsby\"\r\n\r\nfunction Header(props) {\r\n\r\n  return (\r\n    <header className=\"container\">\r\n        <nav>\r\n        <div className=\"logo\"><h1>Chessea</h1></div>\r\n          <ul>\r\n            <li><Link activeStyle={{ color: \"#087F8C\" }} to=\"/\">Home</Link></li>\r\n            <li><Link activeStyle={{ color: \"#087F8C\" }} state={{ data: props.data }}to=\"/page-3\">Artikelen</Link></li>\r\n            <li><Link activeStyle={{ color: \"#087F8C\" }} to=\"/page-4\">Partijen</Link></li>\r\n          </ul>\r\n        </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n//\r\n// const Image = () => {\r\n//   const data = useStaticQuery(graphql`\r\n//     query {\r\n//       placeholderImage: file(relativePath: { eq: \"rabbit.jpg\" }) {\r\n//         childImageSharp {\r\n//           fluid(maxWidth: 600) {\r\n//             ...GatsbyImageSharpFluid\r\n//           }\r\n//         }\r\n//       }\r\n//     }\r\n//   `)\r\n//\r\n//   return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\r\n// }\r\n//\r\n// export default Image\r\n\r\nconst Image = ({ imgName }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allImageSharp {\r\n          edges {\r\n            node {\r\n              fluid(maxWidth: 800) {\r\n                ...GatsbyImageSharpFluid_withWebp\r\n                originalName\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n      const image = data.allImageSharp.edges.find(\r\n        edge => edge.node.fluid.originalName === imgName\r\n      )\r\n      if (!image) {\r\n        return null\r\n      }\r\n      return <Img fluid={image.node.fluid} />\r\n    }}\r\n  />\r\n)\r\nexport default Image\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: 960,\r\n          padding: `0px 1.0875rem 1.45rem`,\r\n          paddingTop: 0,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer>\r\n          © {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { useState, useEffect } from \"react\"\r\nimport './calendar.css'\r\n\r\nfunction Calendar(props) {\r\n  // var [animation, setAnimation] = useState();\r\n  //\r\n  // useEffect(() => { animation = setTimeout(function () {\r\n  //     setAnimation(\"animate\");\r\n  //   }, 1);\r\n  //   }\r\n  // )\r\n  // var divStyle = {\r\n  //   opacity: '0'\r\n  // };\r\n\r\n  if (props.calendar) {\r\n    var post = props.calendar.map((item, i) => {\r\n    return (\r\n      <a href={item.link} key={item.id}>\r\n        <div  className=\"grid-item-k\">\r\n          <div className=\"date\">{item.day}<span>{item.month}</span></div>\r\n          <div className=\"event\">{item.event}</div>\r\n        </div>\r\n      </a>\r\n    )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className=\"grid-item grid-item-c\">\r\n      <div className=\"grid-item-k grid-item-1\">\r\n        <h2>Kalender</h2>\r\n      </div>\r\n      {post}\r\n    </div>\r\n    </>\r\n  )\r\n}\r\nexport default Calendar\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React, { useState, useEffect } from \"react\"\r\nimport './grid.css'\r\nimport './article.css'\r\nimport Image from \"./image\"\r\nimport Calendar from \"./calendar\"\r\nimport { Link } from \"gatsby\"\r\nimport SecondPage from \"../pages/article\"\r\nimport Parser from 'html-react-parser'\r\n\r\n\r\nfunction Grid(props) {\r\n\r\n  if (props.articles) {\r\n  var article = props.articles.slice(0, 2).map((item, i) => {\r\n    var img = item.image == \"null\" ? \"butterfly.jpg\" : item.image;\r\n\r\n    return (\r\n      <div key={i}  className=\"grid-item intro\">\r\n      <Link to=\"/article\"\r\n      state={{ title: item.title,\r\n        article: item.item,\r\n        author: item.author,\r\n        img: item.image}}>\r\n        <Image imgName={img} />\r\n      <div className=\"box\">\r\n        <h3>{item.title}</h3>\r\n        <div className=\"date-sm\">{item.date}</div>\r\n        <div>{Parser(item.item.substring(0,100))}...</div>\r\n      </div>\r\n      </Link>\r\n    </div>\r\n    )\r\n  });\r\n  var article2 = props.articles.slice(2, 5).map((item, i) => {\r\n    return (\r\n      <React.Fragment key={i}>\r\n      <div className=\"grid-item\">\r\n      <Link to=\"/article\"\r\n            state={{ title: item.title,\r\n              article: item.item,\r\n              author: item.author,\r\n              img: item.image}}> <Image imgName={item.image} />\r\n      </Link>\r\n      </div>\r\n      <Link to=\"/article\"\r\n      state={{ title: item.title,\r\n        article: item.item,\r\n        author: item.author,\r\n        img: item.image}}>\r\n        <div className=\"grid-text\">\r\n          <h3>{item.title}</h3>\r\n          <div className=\"date-sm\">{item.date}</div>\r\n          <div>  {Parser(item.item.substring(0,100))}...</div>\r\n          </div>\r\n      </Link>\r\n      </React.Fragment>\r\n    )});\r\n}\r\n\r\n  return (\r\n    <>\r\n    <section>\r\n        <div className=\"grid-container\">\r\n          {article}\r\n          <Calendar calendar={props.calendar}/>\r\n        </div>\r\n    </section>\r\n\r\n    <section className=\"container\">\r\n        <div className=\"grid-container grid-container-d\">\r\n          {article2}\r\n        </div>\r\n    </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Grid\r\n"],"sourceRoot":""}