{"version":3,"sources":["webpack:///./src/pages/article.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/image.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./src/components/layout.js","webpack:///./src/components/header.js","webpack:///./src/components/Nav.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_image__WEBPACK_IMPORTED_MODULE_2__","_components_Nav__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","html_react_parser__WEBPACK_IMPORTED_MODULE_6__","html_react_parser__WEBPACK_IMPORTED_MODULE_6___default","SecondPage","_ref","location","state","img","a","createElement","Fragment","className","title","author","Parser","article","imgName","useEffect","navigate","d","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","data","query","render","finalData","props","children","Consumer","Image","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","image","allImageSharp","edges","find","edge","node","fluid","originalName","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","_public_static_d_397463695_json__WEBPACK_IMPORTED_MODULE_1__","m","module","exports","require","default","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","Layout","_public_static_d_856328897_json__WEBPACK_IMPORTED_MODULE_0__","_header__WEBPACK_IMPORTED_MODULE_2__","siteTitle","style","margin","maxWidth","padding","paddingTop","Date","getFullYear","href","gatsby__WEBPACK_IMPORTED_MODULE_2__","Header","activeStyle","color","to","Nav","active","activeClass","scrollClass","componentDidMount","_this2","this","lastScrollTop","window","addEventListener","event","st","pageYOffset","setState","keyCode","toggle","e","innerWidth","_this3","id","onClick","react_icons_fa__WEBPACK_IMPORTED_MODULE_1__","Component","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"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","file":"component---src-pages-article-js-a3b428fcc7e21d6471d3.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport Image from \"../components/image\"\r\nimport Nav from \"../components/Nav\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { useEffect } from 'react';\r\nimport { navigate } from 'gatsby';\r\nimport Parser from 'html-react-parser';\r\n\r\nfunction SecondPage ({ location }) {\r\nif (location.state) {\r\n  var img = location.state.img == \"null\" ? \"butterfly.jpg\" : location.state.img;\r\n  }\r\n  if ( !location.state) {\r\n    useEffect(() => {\r\n   navigate('/page-3');\r\n }, []);\r\n return null;\r\n  }\r\nreturn (\r\n  <>\r\n  <Nav />\r\n<div className=\"container tpl-a\">\r\n    <SEO title=\"Page two\" />\r\n    <div className=\"grid-container\">\r\n    <div  className=\"grid-item\">\r\n      <h3>{location.state.title}</h3>\r\n      <div className=\"date-sm\">{location.state.author}</div>\r\n      <p>{Parser(location.state.article)}</p>\r\n    </div>\r\n    <div  className=\"grid-item\"><Image imgName={img} /></div>\r\n    </div>\r\n</div>\r\n</>\r\n)\r\n}\r\n\r\nexport default SecondPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `useStaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n//\r\n// const Image = () => {\r\n//   const data = useStaticQuery(graphql`\r\n//     query {\r\n//       placeholderImage: file(relativePath: { eq: \"rabbit.jpg\" }) {\r\n//         childImageSharp {\r\n//           fluid(maxWidth: 600) {\r\n//             ...GatsbyImageSharpFluid\r\n//           }\r\n//         }\r\n//       }\r\n//     }\r\n//   `)\r\n//\r\n//   return <Img fluid={data.placeholderImage.childImageSharp.fluid} />\r\n// }\r\n//\r\n// export default Image\r\n\r\nconst Image = ({ imgName }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allImageSharp {\r\n          edges {\r\n            node {\r\n              fluid(maxWidth: 800) {\r\n                ...GatsbyImageSharpFluid_withWebp\r\n                originalName\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n      const image = data.allImageSharp.edges.find(\r\n        edge => edge.node.fluid.originalName === imgName\r\n      )\r\n      if (!image) {\r\n        return null\r\n      }\r\n      return <Img fluid={image.node.fluid} />\r\n    }}\r\n  />\r\n)\r\nexport default Image\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: 960,\r\n          padding: `0px 1.0875rem 1.45rem`,\r\n          paddingTop: 0,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer>\r\n          © {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport './header.css'\r\nimport { Link } from \"gatsby\"\r\n\r\nfunction Header(props) {\r\n\r\n  return (\r\n    <header className=\"container\">\r\n        <nav>\r\n        <div className=\"logo\"><h1>Chessea</h1></div>\r\n          <ul>\r\n            <li><Link activeStyle={{ color: \"#087F8C\" }} to=\"/\">Home</Link></li>\r\n            <li><Link activeStyle={{ color: \"#087F8C\" }} state={{ data: props.data }}to=\"/page-3\">Artikelen</Link></li>\r\n            <li><Link activeStyle={{ color: \"#087F8C\" }} to=\"/page-4\">Partijen</Link></li>\r\n          </ul>\r\n        </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\n\r\nexport default Header\r\n","import React from 'react';\r\n\r\nimport { FaBars, FaWindowClose } from 'react-icons/fa';\r\nimport './header.css'\r\nimport { Link } from \"gatsby\"\r\n\r\nclass Nav extends React.Component {\r\n\r\n  state = {\r\n        active: \"nav-closed\",\r\n        activeClass: \"top\",\r\n        scrollClass: \"\"\r\n     }\r\n\r\n    componentDidMount(){\r\n\r\n      var lastScrollTop = 0;\r\n// element should be replaced with the actual target element on which you have applied scroll, use window in case of no target element.\r\nwindow.addEventListener(\"scroll\", (event) => {\r\n    var st = window.pageYOffset;\r\n    if (st > lastScrollTop){\r\n      this.setState({scrollClass: \"scrolling-down\"})\r\n    } else {\r\n      this.setState({scrollClass: \"scrolling-up\"})\r\n    }\r\n    lastScrollTop = st <= 0 ? 0 : st;\r\n  }, false);\r\n\r\n      window.addEventListener('scroll', (event) => {\r\n\r\n        if(window.pageYOffset > \"200\"){\r\n            this.setState({activeClass: \"scrolled\"})\r\n        }else {\r\n            this.setState({activeClass: \"top\"})\r\n        }\r\n      });\r\n      window.addEventListener('keyup', (event) => {\r\n        if (event.keyCode == 27) {\r\n          this.setState({active: \"nav-closed\"})\r\n        }\r\n      });\r\n }\r\n     toggle(e){\r\n       if (window.innerWidth >= 768) {\r\n         this.setState({active: \"nav-closed\"})\r\n       }\r\n       else if (this.state.active === \"nav-open\") {\r\n         this.setState({active: \"nav-closed\"})\r\n       }\r\n        else {this.setState({active: \"nav-open\"})\r\n      }\r\n     }\r\n  render () {\r\n    return (\r\n      <header>\r\n      <nav className={this.state.scrollClass + \" \" + this.state.activeClass + \" \" + this.state.active }>\r\n      <div>\r\n        <div className=\"container\">\r\n        <div className=\"hamburger\" id=\"first\" onClick={e => this.toggle(e)}><Link to=\"/#menu\"></Link> <span className=\"bars\"><FaBars /></span><span className=\"cross\"><FaWindowClose /></span>  </div>\r\n          <ul className=\"list-inline\">\r\n          <li className=\"navbar-brand\" onClick={e => this.toggle(e)}> <Link to=\"/\"><h1>Chessea</h1> </Link></li>\r\n            <li className=\"list-inline-item\" onClick={e => this.toggle(e)}><Link activeStyle={{ color: \"#087F8C\" }} to=\"/\">Home</Link></li>\r\n            <li className=\"list-inline-item\" onClick={e => this.toggle(e)}><Link activeStyle={{ color: \"#087F8C\" }} state={{ data: this.props.data }}to=\"/page-3\">Artikelen</Link></li>\r\n            <li className=\"list-inline-item\" onClick={e => this.toggle(e)}><Link activeStyle={{ color: \"#087F8C\" }} to=\"/page-4\">Partijen</Link></li>\r\n          </ul>\r\n        </div>\r\n        </div>\r\n      </nav>\r\n      </header>\r\n\r\n  )\r\n  }\r\n}\r\nexport default Nav;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}